<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//declaring variables
w1Start = 40;//when first wave will start
currentWave = 1;
totalWaves = 7;
waveCooldownInit = 300;//waveCooldown will reset to this value after wave completes
waveCooldown = 300;//time between each wave

//*******testing lines below. can set currentWave for testing specific w//aves
//currentWave = 7;
//waveCooldown = 10;
//*******testing lines above

//Wave 1
//~12 seconds long
w1FishTimerInit = 30;//time between each fish spawn
w1FishTimer = 30;//timer for very first firsh spawn.whatever this is initialized to will be the time until the first fish spawns
w1FishCount = 9;

w1CudaCrocTimerInit = 80;
w1CudaCrocTimer = 120;
w1CudaCrocCount = 6


w1SquidTimerInit = 150;
w1SquidTimer = 80;
w1SquidCount = 4;

w1SquidBabyCount = 0;
w1SquidBabyTimer = 30;
w1SquidBabyTimerInit = 60;

//Wave 2
//~23 seconds long
w2FishTimerInit = 30;
w2FishTimer = 60;
w2FishCount = 10;

w2SquidTimerInit = 100;
w2SquidTimer = 100;
w2SquidCount = 4;

w2SquidBabyCount = 0;
w2SquidBabyTimer = 30;
w2SquidBabyTimerInit = 90;

w2TurtleTimerInit = 200;
w2TurtleTimer = 60;
w2TurtleCount = 2;

//Wave 3
//~26 seconds long
w3TurtleTimerInit = 210;
w3TurtleTimer = 150;
w3TurtleCount = 2;

w3CudaCrocTimerInit= 100;
w3CudaCrocTimer = 100;
w3CudaCrocCount=6


w3FishTimerInit = 30;
w3FishTimer = 30;
w3FishCount = 10;

w3SquidTimerInit = 100;
w3SquidTimer = 60;
w3SquidCount = 6;

w3SquidBabyCount = 0;
w3SquidBabyTimer = 30;
w3SquidBabyTimerInit = 60;

w3KillerEelTimerInit = 75;
w3KillerEelTimer = 150;
w3KillerEelCount = 6;

//Wave 4


w4CudaCrocTimerInit=90;
w4CudaCrocTimer= 30;
w4CudaCrocCount= 6;

w4SquidTimerInit = 100;
w4SquidTimer = 100;
w4SquidCount = 8;

w4SquidBabyCount = 0;
w4SquidBabyTimer = 30;
w4SquidBabyTimerInit = 60;

w4FishTimerInit = 45;
w4FishTimer = 400;
w4FishCount = 10;

//Wave 5
//~45 seconds long
w5SquidTimerInit = 80;
w5SquidTimer = 30;
w5SquidCount = 10;

w5SquidBabyCount = 0;
w5SquidBabyTimer = 30;
w5SquidBabyTimerInit = 60;

w5KillerEelTimerInit = 30;
w5KillerEelTimer = 150;
w5KillerEelCount = 12;

w5TurtleTimerInit= 200;
w5TurtleTimer= 60;
w5TurtleCount = 4;

w5CudaCrocTimerInit = 110;
w5CudaCrocTimer = 300;
w5CudaCrocCount = 5


//wave 6 
//~45 seconds long
w6FishTimerInit = 60;
w6FishTimer = 150;
w6FishCount = 20;

w6SquidTimerInit = 100;
w6SquidTimer = 30;
w6SquidCount = 10;

w6SquidBabyCount = 0;
w6SquidBabyTimer = 30;
w6SquidBabyTimerInit = 60;

w6KillerEelTimerInit = 90;
w6KillerEelTimer = 100;
w6KillerEelCount = 10;


//wave 7
//~45 seconds long
w7NessieBeastTimer = 30;
w7NessieBeastCount = 1;

w7CudaCrocTimerInit = 120;
w7CudaCrocTimer = 200;
w7CudaCrocCount = 20;

w7SquidTimerInit = 100;
w7SquidTimer = 100;
w7SquidCount = 15;

w7SquidBabyCount = 0;
w7SquidBabyTimer = 30;
w7SquidBabyTimerInit = 60;

w7FishTimerInit = 20;
w7FishTimer = 30;
w7FishCount = 125;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Wave1
if(w1Start &gt;= 0) w1Start--;
if(w1Start &lt;= 0 &amp;&amp; currentWave == 1){
    w1FishTimer--;
    w1SquidTimer--;
    w1CudaCrocTimer--;
 
    
    //spawns a fish when the fish timmer == 0
    if(w1FishTimer &lt;= 0 &amp;&amp; w1FishCount != 0){
        instance_create(0,192,obj_EnemyFish);//??not sure if the provided x,y coords actually do anything since the enemies use paths??
        w1FishCount--;
        w1FishTimer = w1FishTimerInit;
    }
    if(w1SquidTimer &lt;= 0 &amp;&amp; w1SquidCount != 0){
        instance_create(0,192,obj_EnemySquid);
        w1SquidCount--;
        w1SquidTimer = w1SquidTimerInit;
    }
    if(w1SquidBabyTimer &lt;= 0 &amp;&amp; w1SquidBabyCount != 0){
      
        w1SquidBabyCount--;
        w1SquidBabyTimer = w1SquidBabyTimerInit;
    }
      if(w1CudaCrocTimer &lt;= 0 &amp;&amp; w1CudaCrocCount != 0){
        instance_create(0,192,obj_EnemyCudaCroc);
        w1CudaCrocCount--;
        w1CudaCrocTimer = w1CudaCrocTimerInit;
    }
    
    
    //once all of the fish have spawned, the next wave will begin
    if(w1FishCount == 0 &amp;&amp; w1SquidCount == 0 &amp;&amp; w1CudaCrocCount==0 &amp;&amp; w1SquidBabyCount == 0){
        currentWave++;
    }
}

//Wave2
if(currentWave == 2 &amp;&amp; waveCooldown != 0) waveCooldown--;

if(waveCooldown == 0 &amp;&amp; currentWave == 2){
    w2TurtleTimer--;
    w2FishTimer--;
    w2SquidTimer--;
    
    if(w2FishTimer &lt;= 0 &amp;&amp; w2FishCount != 0){
        instance_create(0,192,obj_EnemyFish);
        w2FishCount--;
        w2FishTimer = w2FishTimerInit;
    }
    if(w2TurtleTimer &lt;= 0 &amp;&amp; w2TurtleCount != 0){
        instance_create(0,192,obj_EnemyTurtle);
        w2TurtleCount--;
        w2TurtleTimer = w2TurtleTimerInit;
    }
    if(w2SquidTimer &lt;= 0 &amp;&amp; w2SquidCount != 0){
        instance_create(0,192,obj_EnemySquid);
        w2SquidCount--;
        w2SquidTimer = w2SquidTimerInit;
    }
    if(w2SquidBabyTimer &lt;= 0 &amp;&amp; w2SquidBabyCount != 0){
        //instance_create(0,192,obj_EnemySquid);
        w2SquidBabyCount--;
        w2SquidBabyTimer = w2SquidBabyTimerInit;
    }
    
    if(w2FishCount == 0 &amp;&amp; w2TurtleCount == 0 &amp;&amp; w2SquidCount == 0 &amp;&amp; w2SquidBabyCount == 0){
        currentWave++;
        waveCooldown = waveCooldownInit;
    }
}

//Wave 3
if(currentWave == 3 &amp;&amp; waveCooldown != 0) waveCooldown--;

if(waveCooldown == 0 &amp;&amp; currentWave == 3){
    w3TurtleTimer--;
    w3FishTimer--;
    w3KillerEelTimer--;
    w3SquidTimer--;
    w3CudaCrocTimer--;
        
    if(w3TurtleTimer &lt;= 0 &amp;&amp; w3TurtleCount != 0){
        instance_create(0,192,obj_EnemyTurtle);
        w3TurtleCount--;
        w3TurtleTimer = w3TurtleTimerInit;
    }
    if(w3FishTimer &lt;= 0 &amp;&amp; w3FishCount != 0){
        instance_create(0,192,obj_EnemyFish);
        w3FishCount--;
        w3FishTimer = w3FishTimerInit;
    }
    if(w3KillerEelTimer &lt;= 0 &amp;&amp; w3KillerEelCount != 0){
        instance_create(0,192,obj_EnemyKillerEel);
        w3KillerEelCount--;
        w3KillerEelTimer = w3KillerEelTimerInit;
    }
       if(w3SquidTimer &lt;= 0 &amp;&amp; w3SquidCount != 0){
        instance_create(0,192,obj_EnemySquid);
        w3SquidCount--;
        w3SquidTimer = w3SquidTimerInit;
    }
    if(w3SquidBabyTimer &lt;= 0 &amp;&amp; w3SquidBabyCount != 0){
        //instance_create(0,192,obj_EnemySquid);
        w3SquidBabyCount--;
        w3SquidBabyTimer = w3SquidBabyTimerInit;
    }
    if(w3CudaCrocTimer &lt;= 0 &amp;&amp; w3CudaCrocCount != 0){
        instance_create(0,192,obj_EnemyCudaCroc);
        w3CudaCrocCount--;
        w3CudaCrocTimer = w3CudaCrocTimerInit;
    }
    if(w3FishCount == 0 &amp;&amp; w3TurtleCount == 0 &amp;&amp; w3CudaCrocCount == 0 &amp;&amp; w3KillerEelCount == 0 &amp;&amp; w3SquidCount == 0 &amp;&amp; w3SquidBabyCount == 0){
        currentWave++;
        waveCooldown = waveCooldownInit;
    }
}

//Wave 4 
if(currentWave == 4 &amp;&amp; waveCooldown != 0) waveCooldown--;

if(waveCooldown == 0 &amp;&amp; currentWave == 4){
   // w4TurtleTimer--;
    w4CudaCrocTimer--;
    w4FishTimer--;
    w4SquidTimer--;

    if(w4CudaCrocTimer &lt;= 0 &amp;&amp; w4CudaCrocCount != 0){
        instance_create(0,192,obj_EnemyCudaCroc);
        w4CudaCrocCount--;
        w4CudaCrocTimer = w4CudaCrocTimerInit;
    }
    if(w4FishTimer &lt;= 0 &amp;&amp; w4FishCount != 0){
        instance_create(0,192,obj_EnemyFish);
        w4FishCount--;
        w4FishTimer = w4FishTimerInit;
    }
       if(w4SquidTimer &lt;= 0 &amp;&amp; w4SquidCount != 0){
        instance_create(0,192,obj_EnemySquid);
        w4SquidCount--;
        w4SquidTimer = w4SquidTimerInit;
    }
    if(w4SquidBabyTimer &lt;= 0 &amp;&amp; w4SquidBabyCount != 0){
        //instance_create(0,192,obj_EnemySquid);
        w4SquidBabyCount--;
        w4SquidBabyTimer = w4SquidBabyTimerInit;
    }
    
    if(w4FishCount == 0 &amp;&amp; w4CudaCrocCount == 0 &amp;&amp; w4SquidCount == 0 &amp;&amp; w4SquidBabyCount == 0){
        currentWave++;
        waveCooldown = waveCooldownInit;
    }
}

//Wave 5
if(currentWave == 5 &amp;&amp; waveCooldown != 0) waveCooldown--;

if(waveCooldown == 0 &amp;&amp; currentWave == 5){
    w5KillerEelTimer--;
    w5TurtleTimer--;
    w5CudaCrocTimer--;
    w5SquidTimer--;
        
    if(w5KillerEelTimer &lt;= 0 &amp;&amp; w5KillerEelCount != 0){
        instance_create(0,192,obj_EnemyKillerEel);
        w5KillerEelCount--;
        w5KillerEelTimer = w5KillerEelTimerInit;
    }
    if(w5TurtleTimer &lt;= 0 &amp;&amp; w5TurtleCount != 0){
        instance_create(0,192,obj_EnemyTurtle);
        w5TurtleCount--;
        w5TurtleTimer = w5TurtleTimerInit;
    }
    if(w5CudaCrocTimer &lt;= 0 &amp;&amp; w5CudaCrocCount != 0){
        instance_create(0,192,obj_EnemyCudaCroc);
        w5CudaCrocCount--;
        w5CudaCrocTimer = w5CudaCrocTimerInit;
    }
    
 
    if(w5SquidTimer &lt;= 0 &amp;&amp; w5SquidCount != 0){
        instance_create(0,192,obj_EnemySquid);
        w5SquidCount--;
        w5SquidTimer = w5SquidTimerInit;
    }
    if(w5SquidBabyTimer &lt;= 0 &amp;&amp; w5SquidBabyCount != 0){
        //instance_create(0,192,obj_EnemySquid);
        w5SquidBabyCount--;
        w5SquidBabyTimer = w5SquidBabyTimerInit;
    }
    
    if(w5KillerEelCount == 0 &amp;&amp; w5TurtleCount == 0 &amp;&amp; w5CudaCrocCount == 0 &amp;&amp; w5SquidCount == 0 &amp;&amp; w5SquidBabyCount == 0){
        currentWave++;
        waveCooldown = waveCooldownInit;
    }
}

//wave 6
if(currentWave == 6 &amp;&amp; waveCooldown != 0) waveCooldown--;

if(waveCooldown == 0 &amp;&amp; currentWave == 6){
    w6FishTimer--;
    w6KillerEelTimer--;
    w6SquidTimer--;    
    
    if(w6FishTimer &lt;=0 &amp;&amp; w6FishCount != 0){
        instance_create(0,192,obj_EnemyFish);
        w6FishCount--;
        w6FishTimer = w6FishTimerInit;   
    }
    
    if(w6KillerEelTimer &lt;= 0 &amp;&amp; w6KillerEelCount != 0){
        instance_create(0,192,obj_EnemyKillerEel);
        w6KillerEelCount--;
        w6KillerEelTimer = w6KillerEelTimerInit;
    }
    
    
    if(w6SquidTimer &lt;= 0 &amp;&amp; w6SquidCount != 0){
        instance_create(0,192,obj_EnemySquid);
        w6SquidCount--;
        w6SquidTimer = w6SquidTimerInit;
    }
    if(w6SquidBabyTimer &lt;= 0 &amp;&amp; w6SquidBabyCount != 0){
        //instance_create(0,192,obj_EnemySquid);
        w6SquidBabyCount--;
        w6SquidBabyTimer = w6SquidBabyTimerInit;
    }
    
    if(w6FishCount == 0 &amp;&amp; w6KillerEelCount == 0 &amp;&amp; w6SquidCount == 0 &amp;&amp; w6SquidBabyCount == 0){
        currentWave++;
        waveCooldown = waveCooldownInit;
    }
}

//wave 7
if(currentWave == 7 &amp;&amp; waveCooldown != 0) waveCooldown--;

if(waveCooldown == 0 &amp;&amp; currentWave == 7){
    w7NessieBeastTimer--;
    w7FishTimer--;
    w7SquidTimer--;
    w7CudaCrocTimer--;
        
    if(w7NessieBeastTimer &lt;= 0 &amp;&amp; w7NessieBeastCount != 0){
        instance_create(0,192,obj_EnemyNessieBeast);
        w7NessieBeastCount--;
    }
       if(w7SquidTimer &lt;= 0 &amp;&amp; w7SquidCount != 0){
        instance_create(0,192,obj_EnemySquid);
        w7SquidCount--;
        w7SquidTimer = w7SquidTimerInit;
    }
    if(w7SquidBabyTimer &lt;= 0 &amp;&amp; w7SquidBabyCount != 0){
        //instance_create(0,192,obj_EnemySquid);
        w7SquidBabyCount--;
        w7SquidBabyTimer = w7SquidBabyTimerInit;
    }
    if(w7FishTimer &lt;=0 &amp;&amp; w7FishCount != 0){
        instance_create(0,192,obj_EnemyFish);
        w7FishCount--;
        w7FishTimer = w7FishTimerInit;   
    }
    if(w7CudaCrocTimer &lt;= 0 &amp;&amp; w7CudaCrocCount != 0){
        instance_create(0,192,obj_EnemyCudaCroc);
        w7CudaCrocCount--;
        w7CudaCrocTimer = w7CudaCrocTimerInit;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_Stats);
draw_text(20,20,"Wave: " + string(currentWave) + "/" + string(totalWaves));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
