<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//declaring variables
w1Start = 60;//when first wave will start
currentWave = 1;
totalWaves = 7;
waveCooldownInit = 300;//waveCooldown will reset to this value after wave completes
waveCooldown = 300;//time between each wave

//*******testing lines below. can set currentWave for testing specific waves
//currentWave = 1;
//waveCooldown = 10;
//*******testing lines above

//Wave 1
//~12 seconds long
w1FishTimerInit = 30;//time between each fish spawn
w1FishTimer = 30;//timer for very first firsh spawn.whatever this is initialized to will be the time until the first fish spawns
w1FishCount = 30;

w1SquidTimerInit = 200;//time between each fish spawn
w1SquidTimer = 45;//timer for very first firsh spawn.whatever this is initialized to will be the time until the first fish spawns
w1SquidCount = 8;

w1LobsterRayTimerInit = 300;//time between each fish spawn
w1LobsterRayTimer = 100;//timer for very first firsh spawn.whatever this is initialized to will be the time until the first fish spawns
w1LobsterRayCount = 4;

//Wave 2
//~23 seconds long
w2FishTimerInit = 30;
w2FishTimer = 30;
w2FishCount = 40;

w2TurtleTimerInit = 210;
w2TurtleTimer = 60;
w2TurtleCount = 3;

w2LobsterRayTimerInit = 800;
w2LobsterRayTimer = 60;
w2LobsterRayCount = 3;

w2SquidTimerInit = 200;
w2SquidTimer = 45;
w2SquidCount = 8;

//Wave 3
//~26 seconds long
w3TurtleTimerInit = 210;
w3TurtleTimer = 60;
w3TurtleCount = 3;

w3FishTimerInit = 30;
w3FishTimer = 30;
w3FishCount = 40;

w3SquidTimerInit = 300;
w3SquidTimer = 45;
w3SquidCount = 6;

w3LobsterRayTimerInit = 300;
w3LobsterRayTimer = 60;
w3LobsterRayCount = 6;

w3KillerEelTimerInit = 60;
w3KillerEelTimer = 90;
w3KillerEelCount = 8;



//Wave 4
//~41 seconds long
w4TurtleTimerInit = 90;
w4TurtleTimer = 30;
w4TurtleCount = 5;

w4FishTimerInit = 15;
w4FishTimer = 500;
w4FishCount = 40;

w4LobsterRayTimerInit = 300;//time between each fish spawn
w4LobsterRayTimer = 100;//timer for very first firsh spawn.whatever this is initialized to will be the time until the first fish spawns
w4LobsterRayCount = 4;

w4CudaCrocTimerInit= 100;
w4CudaCrocTimer = 100;
w4CudaCrocCount=4

//Wave 5
//~45 seconds long
w5KillerEelTimerInit = 30;
w5KillerEelTimer = 30;
w5KillerEelCount = 45;

//first turtle pack
w5Turtle1TimerInit = 20;
w5Turtle1Timer = 30;
w5Turtle1Count = 2;

//seconds turtle pack
w5Turtle2TimerInit = 20;
w5Turtle2Timer = 450;
w5Turtle2Count = 2;

//third turtle pack
w5Turtle3TimerInit = 20;
w5Turtle3Timer = 300;
w5Turtle3Count = 2;

//wave 6 
//~45 seconds long
w6FishTimerInit = 10;
w6FishTimer = 15;
w6FishCount = 80;

w6Turtle1TimerInit = 20;
w6Turtle1Timer = 30;
w6Turtle1Count = 3;

w6Turtle2TimerInit = 100;
w6Turtle2Timer = 300;
w6Turtle2Count = 3;

w6CudaCrocTimerInit= 550;
w6CudaCrocTimer = 100;
w6CudaCrocCount=4

w6LobsterRayTimerInit = 600;//time between each fish spawn
w6LobsterRayTimer = 150;//timer for very first firsh spawn.whatever this is initialized to will be the time until the first fish spawns
w6LobsterRayCount = 4;

//wave 7
//~45 seconds long
w7MantisTimer = 50;
w7MantisCount = 1;

w7FishTimerInit = 20;
w7FishTimer = 30;
w7FishCount = 100;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Wave1
if(w1Start &gt;= 0) w1Start--;
if(w1Start &lt;= 0 &amp;&amp; currentWave == 1){
    w1FishTimer--;
    w1LobsterRayTimer--;
    w1SquidTimer--;
    
    //spawns a fish when the fish timmer == 0
    if(w1FishTimer &lt;= 0 &amp;&amp; w1FishCount != 0){
        instance_create(0,192,obj_EnemyFish);//??not sure if the provided x,y coords actually do anything since the enemies use paths??
        w1FishCount--;
        w1FishTimer = w1FishTimerInit;
    }
    if(w1SquidTimer &lt;= 0 &amp;&amp; w1SquidCount != 0){
        instance_create(0,192,obj_EnemySquid);
        w1SquidCount--;
        w1SquidTimer = w1SquidTimerInit;
    }
    if(w1LobsterRayTimer &lt;= 0 &amp;&amp; w1LobsterRayCount != 0){
        instance_create(0,192,obj_EnemyLobsterRay);
        w1LobsterRayCount--;
        w1LobsterRayTimer = w1LobsterRayTimerInit;
    }
    //once all of the fish have spawned, the next wave will begin
    if(w1FishCount == 0 &amp;&amp; w1SquidCount == 0 &amp;&amp; w1LobsterRayCount == 0){
        currentWave++;
    }
}

//Wave2
if(currentWave == 2 &amp;&amp; waveCooldown != 0) waveCooldown--;

if(waveCooldown == 0 &amp;&amp; currentWave == 2){
    w2TurtleTimer--;
    w2SquidTimer--;
    w2LobsterRayTimer--;
    w2FishTimer--;
    if(w2FishTimer &lt;= 0 &amp;&amp; w2FishCount != 0){
        instance_create(0,192,obj_EnemyFish);
        w2FishCount--;
        w2FishTimer = w2FishTimerInit;
    }
    if(w2TurtleTimer &lt;= 0 &amp;&amp; w2TurtleCount != 0){
        instance_create(0,192,obj_EnemyTurtle);
        w2TurtleCount--;
        w2TurtleTimer = w2TurtleTimerInit;
    }
    if(w2LobsterRayTimer &lt;= 0 &amp;&amp; w2LobsterRayCount != 0){
        instance_create(0,192,obj_EnemyLobsterRay);
        w2LobsterRayCount--;
        w2LobsterRayTimer = w2LobsterRayTimerInit;
    }
    if(w2SquidTimer &lt;= 0 &amp;&amp; w2SquidCount != 0){
        instance_create(0,192,obj_EnemySquid);
        w2SquidCount--;
        w2SquidTimer = w2SquidTimerInit;
    }
    
    if(w2FishCount == 0 &amp;&amp; w2TurtleCount == 0 &amp;&amp; w2SquidCount == 0 &amp;&amp; w1LobsterRayCount == 0){
        currentWave++;
        waveCooldown = waveCooldownInit;
    }
}

//Wave 3
if(currentWave == 3 &amp;&amp; waveCooldown != 0) waveCooldown--;

if(waveCooldown == 0 &amp;&amp; currentWave == 3){
    w3TurtleTimer--;
    w3FishTimer--;
    w3SquidTimer--;
    w3LobsterRayTimer--;
    w3KillerEelTimer--;
    
    if(w3TurtleTimer &lt;= 0 &amp;&amp; w3TurtleCount != 0){
        instance_create(0,192,obj_EnemyTurtle);
        w3TurtleCount--;
        w3TurtleTimer = w3TurtleTimerInit;
    }
    if(w3FishTimer &lt;= 0 &amp;&amp; w3FishCount != 0){
        instance_create(0,192,obj_EnemyFish);
        w3FishCount--;
        w3FishTimer = w3FishTimerInit;
    }
    if(w3SquidTimer &lt;= 0 &amp;&amp; w3SquidCount != 0){
        instance_create(0,192,obj_EnemySquid);
        w3SquidCount--;
        w3SquidTimer = w3SquidTimerInit;
    }
    if(w3LobsterRayTimer &lt;= 0 &amp;&amp; w3LobsterRayCount != 0){
        instance_create(0,192,obj_EnemyLobsterRay);
        w3LobsterRayCount--;
        w3LobsterRayTimer = w3LobsterRayTimerInit;
    }
    if(w3KillerEelTimer &lt;= 0 &amp;&amp; w3KillerEelCount != 0){
        instance_create(0,192,obj_EnemyKillerEel);
        w3KillerEelCount--;
        w3KillerEelTimer = w3KillerEelTimerInit;
    }
    if(w3FishCount == 0 &amp;&amp; w3TurtleCount == 0 &amp;&amp; w3KillerEelCount == 0 &amp;&amp; w1LobsterRayCount == 0){
        currentWave++;
        waveCooldown = waveCooldownInit;
    }
}

//Wave 4 
if(currentWave == 4 &amp;&amp; waveCooldown != 0) waveCooldown--;

if(waveCooldown == 0 &amp;&amp; currentWave == 4){
    w4TurtleTimer--;
    w4FishTimer--;
    w4LobsterRayTimer--;
    w4CudaCrocTimer--;
    
    if(w4TurtleTimer &lt;= 0 &amp;&amp; w4TurtleCount != 0){
        instance_create(0,192,obj_EnemyTurtle);
        w4TurtleCount--;
        w4TurtleTimer = w4TurtleTimerInit;
    }
    if(w4FishTimer &lt;= 0 &amp;&amp; w4FishCount != 0){
        instance_create(0,192,obj_EnemyFish);
        w4FishCount--;
        w4FishTimer = w4FishTimerInit;
    }
    if(w4LobsterRayTimer &lt;= 0 &amp;&amp; w4LobsterRayCount != 0){
        instance_create(0,192,obj_EnemyLobsterRay);
        w4LobsterRayCount--;
        w4LobsterRayTimer = w4LobsterRayTimerInit;
    }
   if(w4CudaCrocTimer &lt;= 0 &amp;&amp; w4CudaCrocCount != 0){
        instance_create(0,192,obj_EnemyCudaCroc);
        w4CudaCrocCount--;
        w4CudaCrocTimer = w4CudaCrocTimerInit;
    }
    if(w4FishCount == 0 &amp;&amp; w4TurtleCount == 0 &amp;&amp; w4LobsterRayCount == 0 &amp;&amp; w4CudaCrocCount == 0){
        currentWave++;
        waveCooldown = waveCooldownInit;
    }
 
}

//Wave 5
if(currentWave == 5 &amp;&amp; waveCooldown != 0) waveCooldown--;

if(waveCooldown == 0 &amp;&amp; currentWave == 5){
    w5KillerEelTimer--;
    w5Turtle1Timer--;
    w5Turtle2Timer--;
    w5Turtle3Timer--;
    
    if(w5KillerEelTimer &lt;= 0 &amp;&amp; w5KillerEelCount != 0){
        instance_create(0,192,obj_EnemyKillerEel);
        w5KillerEelCount--;
        w5KillerEelTimer = w5KillerEelTimerInit;
    }
    if(w5Turtle1Timer &lt;= 0 &amp;&amp; w5Turtle1Count != 0){
        instance_create(0,192,obj_EnemyTurtle);
        w5Turtle1Count--;
        w5Turtle1Timer = w5Turtle1TimerInit;
    }
    if(w5Turtle2Timer &lt;= 0 &amp;&amp; w5Turtle2Count != 0){
        instance_create(0,192,obj_EnemyTurtle);
        w5Turtle2Count--;
        w5Turtle2Timer = w5Turtle2TimerInit;
    }
    if(w5Turtle3Timer &lt;= 0 &amp;&amp; w5Turtle3Count != 0){
        instance_create(0,192,obj_EnemyTurtle);
        w5Turtle3Count--;
        w5Turtle3Timer = w5Turtle3TimerInit;
    }
    
    if(w5KillerEelTimer &lt;= 0 &amp;&amp; w5Turtle1Timer != 0){
        instance_create(0,192,obj_EnemyFish);
        w4FishCount--;
        w4FishTimer = w4FishTimerInit;
    }
    
    if(w5KillerEelCount == 0 &amp;&amp; w5Turtle1Count == 0 &amp;&amp; w5Turtle2Count == 0 &amp;&amp; w5Turtle3Count == 0){
        currentWave++;
        waveCooldown = waveCooldownInit;
    }
}

//wave 6
if(currentWave == 6 &amp;&amp; waveCooldown != 0) waveCooldown--;

if(waveCooldown == 0 &amp;&amp; currentWave == 6){
    w6FishTimer--;
    w6Turtle1Timer--;
    w6Turtle2Timer--;
    w6LobsterRayTimer--;
    w6CudaCrocTimer--;
    
    if(w6FishTimer &lt;=0 &amp;&amp; w6FishCount != 0){
        instance_create(0,192,obj_EnemyFish);
        w6FishCount--;
        w6FishTimer = w6FishTimerInit;   
    }
    
    if(w6Turtle1Timer &lt;= 0 &amp;&amp; w6Turtle1Count != 0){
        instance_create(0,192,obj_EnemyTurtle);
        w6Turtle1Count--;
        w6Turtle1Timer = w6Turtle1TimerInit;
    }
    
    if(w6Turtle2Timer &lt;= 0 &amp;&amp; w6Turtle2Count != 0){
        instance_create(0,192,obj_EnemyTurtle);
        w6Turtle2Count--;
        w6Turtle2Timer = w6Turtle2TimerInit;
    }
    if(w6LobsterRayTimer &lt;= 0 &amp;&amp; w6LobsterRayCount != 0){
        instance_create(0,192,obj_EnemyLobsterRay);
        w6LobsterRayCount--;
        w6LobsterRayTimer = w6LobsterRayTimerInit;
    }

 
    if(w6CudaCrocTimer &lt;= 0 &amp;&amp; w6CudaCrocCount != 0){
        instance_create(0,192,obj_EnemyCudaCroc);
        w6CudaCrocCount--;
        w6CudaCrocTimer = w6CudaCrocTimerInit;
    }
    
    if(w6FishCount == 0 &amp;&amp; w6Turtle1Count == 0 &amp;&amp; w6Turtle2Count == 0 &amp;&amp; w6LobsterRayCount == 0 &amp;&amp; w6CudaCrocCount == 0){
        currentWave++;
        waveCooldown = waveCooldownInit;
    }
}

//wave 7
if(currentWave == 7 &amp;&amp; waveCooldown != 0) waveCooldown--;

if(waveCooldown == 0 &amp;&amp; currentWave == 7){
    w7MantisTimer--;
    w7FishTimer--;
    
    if(w7MantisTimer &lt;= 0 &amp;&amp; w7MantisCount != 0){
        instance_create(0,192,obj_EnemyMantis);
        w7MantisCount--;
    }
    
    if(w7FishTimer &lt;=0 &amp;&amp; w7FishCount != 0){
        instance_create(0,192,obj_EnemyFish);
        w7FishCount--;
        w7FishTimer = w7FishTimerInit;   
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_Stats);
draw_text(20,20,"Wave: " + string(currentWave) + "/" + string(totalWaves));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
